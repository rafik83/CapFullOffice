# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        CPA\UserBundle\Entity\User: bcrypt
#        CPA\UserBundle\Service\WebserviceUser: 
#            id: my.encoder.cpa
#        CPA\UserBundle\Entity\User: sha512

#    role_hierarchy:
#        ROLE_ADMIN: [ROLE_MANAGE_GENUS, ROLE_ALLOWED_TO_SWITCH]
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
##        ROLE_SUPER_ADMIN: ROLE_ADMIN
#        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        our_users:
#            entity: { class: AppBundle\Entity\User, property: email }
            entity: { class: CPA\UserBundle\Entity\User, property: username }
#        myProvider:
#              id: platform.user.provider
#        fos_userbundle:
#             id: fos_user.user_provider.username

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        oauth_token:
            pattern:   ^/oauth/v2/token 
#            pattern:   ^/provider/oauth/token 
            security: false
            
        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            provider: our_users
#            provider: myProvider
            remember_me:
                secret: '%secret%'
            guard:
                authenticators:
                    - app.security.login_form_authenticator
            form_login:
#                provider: myProvider
                provider: our_users
#                check_path: _security_check acme_oauth_server_auth_login_check
#                check_path: /oauth/v2/auth_login_check
                check_path: /oauth/v2/auth_login_check
                login_path: /oauth/v2/auth_login
#                check_path: /logouts
#                login_path: /logouts
#                default_target_path: /oauth/login
#                login_path: _demo_login
            logout:
#                path: /logouts
                path: /oauth/login
#                path: /oauth/v2/auth_login_check
#                target: acme_oauth_server_auth_login
                target: acme_oauth_server_auth_login_check
            anonymous: true
        api:
            pattern:   ^/api
            fos_oauth: true
            stateless: true
            anonymous:    true
#            anonymous:    false
        main:
             anonymous: ~
            
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
            
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                provider: myProvider
##                provider: our_users acme_oauth_server_auth_login
#                check_path: _security_check
#                login_path: acme_oauth_server_auth_login
##                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
                
           
            
        
            
        
#            anonymous:    true
        
        
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

    access_control:
        
#         - { path: ^/oauth/v2/auth_login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/oauth/v2/auth$, role: IS_AUTHENTICATED_ANONYMOUSLY}
         - { path: ^/oauth/v2/token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/oauth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/oauth/v2/auth$, role: [ IS_AUTHENTICATED_ANONYMOUSLY, IS_AUTHENTICATED_FULLY ]}
#         - { path: ^/provider/oauth/token, roles: [ IS_AUTHENTICATED_ANONYMOUSLY, IS_AUTHENTICATED_FULLY ] }
         
#         - { path: ^/oauth/v2/auth$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/oauth/v2/token, roles: [ IS_AUTHENTICATED_ANONYMOUSLY, IS_AUTHENTICATED_FULLY ] }
#         - { path: ^/oauth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/oauth/v2/auth$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }
#         - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        # - { path: ^/admin, roles: ROLE_ADMIN }
